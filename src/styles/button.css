@import './variables.css';

/*TODO add supporting icons, add lg/sm sizes*/
:global {
  .ant-btn {
    display: inline-block;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    white-space: nowrap;
    user-select: none;
    transition: all .3s ease-in-out;
    position: relative;
    height: var(--btn-height-base);
    padding: var(--btn-padding-base);
    font-size: var(--font-size-sm);
    font-weight: var(--btn-font-weight);
    font-family: var(--font-family-secondary);
    line-height: var(--line-height-base);

    min-width: 170px;
    text-transform: uppercase;
    letter-spacing: 2px;

    &,
    &:active,
    &:focus {
      outline: 0;
    }

    &:not([disabled]):hover {
      text-decoration: none;
    }

    &:not([disabled]):active {
      outline: 0;
      transition: none;
    }

    &.disabled,
    &[disabled] {
      cursor: not-allowed;
      > * {
        pointer-events: none;
      }
    }

    /*Make sure that the target of Button's click event always be `button`
    Ref: https://github.com/ant-design/ant-design/issues/7034*/
    > i,
    > span {
      pointer-events: none;
    }

    &-primary {
      color: var(--white-color);
      background-color: var(--primary-color);
      border-color: var(--primary-color);

      &:hover,
      &:focus {
        color: var(--white-color);
        background-color: color-mod(var(--primary-color) shade(15%));
        border-color: color-mod(var(--primary-color) shade(15%));
      }

      &:active,
      &.active {
        color: var(--white-color);
        background-color: color-mod(var(--primary-color) shade(20%));
        border-color: color-mod(var(--primary-color) shade(20%));
      }
    }

    &-background-ghost.ant-btn-primary {
      background: rgba(74, 151, 155, 0.1);
      color: var(--primary-color);
      font-weight: normal;

      &:hover,
      &:focus {
        background-color: rgba(74, 151, 155, 0.15);
      }

      &:active,
      &.active {
        background-color: rgba(74, 151, 155, 0.2);

      }
    }

    &:before {
      position: absolute;
      top: -1px;
      left: -1px;
      bottom: -1px;
      right: -1px;
      background: #fff;
      opacity: 0.35;
      content: '';
      border-radius: inherit;
      z-index: 1;
      transition: opacity .2s;
      pointer-events: none;
      display: none;
    }

    /*&&-loading:before {
      display: block;
    }

    &&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
      padding-left: 29px;
      pointer-events: none;
      position: relative;
      .@{iconfont-css-prefix} {
      margin-left: -14px;
    }
    }

    &-sm&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
      padding-left: 24px;
      .@{iconfont-css-prefix} {
      margin-left: -17px;
    }
    }

    &:not(&-circle):not(&-circle-outline)&-icon-only {
      padding-left: 8px;
      padding-right: 8px;
    }*/

    &:focus > span,
    &:active > span {
      position: relative;
    }

    /*// To ensure that a space will be placed between character and `Icon`.
      > .@{iconfont-css-prefix} + span,
                                > span + .@{iconfont-css-prefix} {
      margin-left: 8px;*/

    &-clicked:after {
      content: '';
      position: absolute;
      top: -1px;
      left: -1px;
      bottom: -1px;
      right: -1px;
      border-radius: inherit;
      border: 0 solid var(--primary-color);
      opacity: 0.4;
      animation: buttonEffect .4s;
      display: block;
    }

    a.ant-btn {
      line-height: calc(var(--btn-height-base) - 2px);
      /*&-lg {
        line-height: @btn-height-lg - 2px;
      }
      &-sm {
        line-height: @btn-height-sm - 2px;
      }*/
    }
  }
}

@keyframes: global(buttonEffect) {
  to {
    opacity: 0;
    top: -6px;
    left: -6px;
    bottom: -6px;
    right: -6px;
    border-width: 6px;
  }
}
